apply plugin: 'com.android.application'
// -------QC-------
// apply plugin: 'com.neenbedankt.android-apt'
// apply plugin: 'net.ltgt.apt' -- not found, jdg
// apply from: '../config/quality.gradle'
// apply plugin: 'spoon'
// -------QC-------


android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    compileOptions.encoding = 'UTF-8'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29

        vectorDrawables.useSupportLibrary = true
        // generatedDensities = []

        ndk {// , 'arm64-v8a', 'x86_64'
            abiFilters  'x86', 'armeabi-v7a'
        }
        externalNativeBuild {
            cmake {
                arguments '-DUSE_PLUGINS=y', '-DBUILD_MAPTOOL=n', '-DXSL_PROCESSING=n', '-DSAMPLE_MAP=n' ,
                        '-DDEBUG_BUILD=y' // later make this depend on release or debug build
                                         // makes dbg() C statements print to logcat
            }
        }
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }


    dexOptions {
        javaMaxHeapSize "2.2g"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src', 'aidl']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['nativelibs']
        }
    }

    externalNativeBuild {
        cmake {
            path '../../CMakeLists.txt'
        }
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        // create tasks to generate Javadocs
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            source = android.sourceSets.main.java.srcDirs
            destinationDir = file("build/outputs/docs/javadoc/")

            // the name that will appear in the docs
            title = rootProject.name
            options.memberLevel = JavadocMemberLevel.PACKAGE
            verbose = true
            failOnError false    
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
// -------QC-------
        exclude 'LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
// -------QC-------
    }
    dependencies {
        // dependencies for app building
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'com.github.medyo:android-about-page:1.2.5'

//        implementation project('android-about-page')


//        implementation project(':android-support-annotations')

        // androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'

    }
}





